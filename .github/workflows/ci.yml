name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  compile:
    name: Get deps and compile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Common setup with cache
        uses: ./.github/actions/common-with-cache
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Install dependencies
        run: |
          mix deps.get
          mix deps.compile

      - name: Compile
        run: mix compile --warnings-as-errors --all-warnings

  lint:
    needs: compile
    name: Lint and Security
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Common setup with cache/restore
        uses: ./.github/actions/common-with-cache-restore
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Credo
        run: mix credo --strict

      - name: Format
        run: mix format --check-formatted

      - name: Sobelow
        run: mix sobelow --config

  deps_audit:
    needs: compile
    name: Deps audit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Common setup with cache/restore
        uses: ./.github/actions/common-with-cache-restore
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Hex audit
        run: mix hex.audit

      - name: Deps audit
        run: mix deps.audit

      - name: Unused deps
        run: mix deps.unlock --check-unused

  dialyzer:
    needs: compile
    name: Dialyzer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Common setup with cache/restore
        uses: ./.github/actions/common-with-cache-restore
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v4
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
      # so we separate the cache restore and save steps in case running dialyzer fails.
      - name: Save PLT cache
        id: plt_cache_save
        uses: actions/cache/save@v4
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ matrix.versions.otp }}-${{ matrix.versions.elixir }}-${{ hashFiles('**/mix.lock') }}

      - name: Dialyzer
        run: mix dialyzer --format github

  test-1-2:
    name: Partitioned tests
    needs: compile
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3
    uses: ./.github/workflows/partitioned_tests.yml
    with:
      partition: "1"
      partitions: "2"
      elixir-version: ${{ matrix.versions.elixir }}
      otp-version: ${{ matrix.versions.otp }}

  test-2-2:
    name: Partitioned tests
    needs: compile
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3
    uses: ./.github/workflows/partitioned_tests.yml
    with:
      partition: "2"
      partitions: "2"
      elixir-version: ${{ matrix.versions.elixir }}
      otp-version: ${{ matrix.versions.otp }}

  coverage:
    needs: [test-1-2, test-2-2]
    name: Unify coverage report
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - elixir: 1.18.3
            otp: 27.3.3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Common setup with cache/restore
        uses: ./.github/actions/common-with-cache-restore
        with:
          elixir-version: ${{ matrix.versions.elixir }}
          otp-version: ${{ matrix.versions.otp }}

      - name: Download cover artifacts
        uses: actions/download-artifact@v4
        with:
          path: cover
          pattern: code-coverage-report-*
          merge-multiple: true

      - name: Unify coverage reports
        run: mix test.coverage

  docker_build:
    name: Build and export to Docker
    runs-on: ubuntu-latest
    needs: [lint, deps_audit, dialyzer, coverage]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: anderkonzen/phoenix_bootstrap:latest
          cache-from: type=registry,ref=anderkonzen/phoenix_bootstrap:buildcache
          cache-to: type=registry,ref=anderkonzen/phoenix_bootstrap:buildcache,mode=max

  docker_publish:
    name: Build and publish Docker image
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [docker_build]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: anderkonzen/phoenix_bootstrap:latest
          cache-from: type=registry,ref=anderkonzen/phoenix_bootstrap:buildcache
          cache-to: type=registry,ref=anderkonzen/phoenix_bootstrap:buildcache,mode=max
